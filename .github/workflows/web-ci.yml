name: Web CI

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - web/**
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths:
      - .github/workflows/**
      - web/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: "0"

jobs:
  check:
    if: github.event.pull_request.draft == false
    name: Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - run: cargo check --all --tests --all-features --all-targets

  test:
    if: github.event.pull_request.draft == false
    name: Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: davidB/rust-cargo-make@v1
      - run: cargo test --all --all-features --all-targets

  fmt:
    if: github.event.pull_request.draft == false
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt            
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: cargo-bins/cargo-binstall@v1.6.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo binstall -y --force dioxus-cli@0.5.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo fmt --all -- --check
      # dx fmt and cargo fmt are in conflict with one another, uncomment once we can get them to behave
      # - run: dx fmt --check

  clippy:
    if: github.event.pull_request.draft == false
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt, clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-all-crates: "true"
          save-if: ${{ github.ref == 'refs/heads/main' }}
      - run: cargo clippy --workspace --tests --all-features --all-targets -- -D warnings
