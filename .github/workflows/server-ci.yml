name: Server CI

on:
  push:
    branches:
      - main
    paths:
      - .github/workflows/**
      - server/**
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches:
      - main
    paths:
      - .github/workflows/**
      - server/**

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  test:
    if: github.event.pull_request.draft == false
    name: Test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: server/go.mod
          cache-dependency-path: server/go.sum
      - name: Install dependencies
        run: go mod download
      - name: Run tests
        run: go test -v ./...

  fmt:
    if: github.event.pull_request.draft == false
    name: Gofmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: server/go.mod
          cache-dependency-path: server/go.sum
      - name: Install dependencies
        run: go mod download
      - name: Check formatting
        run: test -z $(gofmt -l .)

  vet:
    if: github.event.pull_request.draft == false
    name: Vet
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version-file: server/go.mod
          cache-dependency-path: server/go.sum
      - name: Install dependencies
        run: go mod download
      - name: Check for issues
        run: go vet ./...
